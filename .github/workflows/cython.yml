# This is a basic workflow to help you get started with Actions

name: Cython

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
  #        ┌───────────── minute (0 - 59)
  #        │ ┌───────────── hour (0 - 23)
  #        │ │ ┌───────────── day of the month (1 - 31)
  #        │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
  #        │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
  #        │ │ │ │ │
  - cron: "0 2 * * 0"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  cython:
    name: Test on ${{ matrix.os }} ${{ matrix.backend }} ${{ matrix.extra_cflags }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        backend: [c]
        extra_cflags: ['', '-DCYTHON_USE_TYPE_SPECS=1']
        include:
          - os: windows-latest
            cflags: '/Od /W3'
          - os: ubuntu-latest
            cflags: '-O0 -g3'
          - os: macOS-latest
            cflags: '-O0 -g3'

    timeout-minutes: 60
    env:
      BACKEND: ${{ matrix.backend }}
      OS_NAME: ${{ matrix.os }}
      PYTHON_VERSION: pypy-3.7
      USE_CCACHE: 1
      CCACHE_SLOPPINESS: "pch_defines,time_macros"
      CCACHE_COMPRESS: 1
      CCACHE_MAXSIZE: "200M"
      NO_CYTHON_COMPILE: 1
      CFLAGS: ${{ matrix.cflags }} ${{ matrix.extra_cflags }}


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: pypy-3.7-nightly

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          repository: cython/cython
          path: cython
          # checkout PR 4203 to fix windows
          ref: e7dda9bad53b86d849e63672fb0f75a7fc325307

      - name: install external dependencies
        if : ${{ matrix.os == 'ubuntu-latest' }}
        run: python -m pip install numpy pythran

        

      - name: test cython
        shell: bash
        run: |
          cd cython
          python -m pip install -U pip setuptools wheel
          python setup.py build_ext -i
          python runtests.py -vv --no-code-style -x Debugger --backends=${{ matrix.backend }} -j7
